name: .NET
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_call:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      id-token: write
      contents: read
      attestations: write
    steps:
      # Step 1: Checkout repository code
      - uses: actions/checkout@v4

      # Step 2: Set up .NET 8.0.x environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      # Step 3: Restore project dependencies
      - name: Restore dependencies
        run: |
          cd src/CurrencyBot
          dotnet restore

      # Step 4: Build the .NET solution
      - name: Build solution
        run: |
          cd src/CurrencyBot
          dotnet build --no-restore

      # Step 5: Upload binary as an artifact
      - name: Upload built binary
        uses: actions/upload-artifact@v3
        with:
          name: CurrencyBotBinary
          path: src/CurrencyBot/bin/Debug/CurrencyBot.dll

  attestation:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write
      contents: read
      attestations: write
    steps:
      # Step 1: Download the artifact from the build job
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: CurrencyBotBinary

      # Step 2: Generate artifact attestation
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-path: './CurrencyBot.dll' # Artifact downloaded to the root directory
